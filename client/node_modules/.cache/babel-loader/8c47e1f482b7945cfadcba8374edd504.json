{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/RaymondChu/react-chess/client/src/components/VideoCall/VideoCall.js\";\nimport React, { useRef, useState } from 'react';\nimport { socket } from '../../socket/socket';\nimport Peer from 'simple-peer';\nexport default function VideoCall(props) {\n  var _s = $RefreshSig$();\n\n  function callPeer(username) {\n    _s();\n\n    const [callAccepted, setCallAccepted] = useState(false);\n    const partnerVideo = useRef();\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"callUser\", {\n        userToCall: username,\n        signalData: data,\n        from: props.username\n      });\n    });\n    peer.on(\"stream\", stream => {\n      if (partnerVideo.current) {\n        partnerVideo.current.srcObject = stream;\n      }\n    });\n    socket.on(\"callAccepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n  }\n\n  _s(callPeer, \"uaDqgg/fspGEFIQYbLOFDBVwN1w=\");\n\n  function acceptCall() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_c = VideoCall;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"sources":["/Users/RaymondChu/react-chess/client/src/components/VideoCall/VideoCall.js"],"names":["React","useRef","useState","socket","Peer","VideoCall","props","callPeer","username","callAccepted","setCallAccepted","partnerVideo","peer","initiator","trickle","stream","on","data","emit","userToCall","signalData","from","current","srcObject","signal","acceptCall"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAErC,WAASC,QAAT,CAAkBC,QAAlB,EAA4B;AAAA;;AACxB,UAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;AACA,UAAMS,YAAY,GAAGV,MAAM,EAA3B;AAEA,UAAMW,IAAI,GAAG,IAAIR,IAAJ,CAAS;AAClBS,MAAAA,SAAS,EAAE,IADO;AAElBC,MAAAA,OAAO,EAAE,KAFS;AAGlBC,MAAAA,MAAM,EAAEA;AAHU,KAAT,CAAb;AAMAH,IAAAA,IAAI,CAACI,EAAL,CAAQ,QAAR,EAAkBC,IAAI,IAAI;AACtBd,MAAAA,MAAM,CAACe,IAAP,CAAY,UAAZ,EAAwB;AAAEC,QAAAA,UAAU,EAAEX,QAAd;AAAwBY,QAAAA,UAAU,EAAEH,IAApC;AAA0CI,QAAAA,IAAI,EAAEf,KAAK,CAACE;AAAtD,OAAxB;AACH,KAFD;AAIAI,IAAAA,IAAI,CAACI,EAAL,CAAQ,QAAR,EAAkBD,MAAM,IAAI;AACxB,UAAIJ,YAAY,CAACW,OAAjB,EAA0B;AACtBX,QAAAA,YAAY,CAACW,OAAb,CAAqBC,SAArB,GAAiCR,MAAjC;AACH;AACJ,KAJD;AAMAZ,IAAAA,MAAM,CAACa,EAAP,CAAU,cAAV,EAA0BQ,MAAM,IAAI;AAChCd,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,MAAAA,IAAI,CAACY,MAAL,CAAYA,MAAZ;AACH,KAHD;AAIH;;AA1BoC,KAE5BjB,QAF4B;;AA4BrC,WAASkB,UAAT,GAAsB,CACrB;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KApCuBpB,S","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { socket } from '../../socket/socket';\nimport Peer from 'simple-peer';\n\nexport default function VideoCall(props) {\n\n    function callPeer(username) {\n        const [callAccepted, setCallAccepted] = useState(false);\n        const partnerVideo = useRef();\n\n        const peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream: stream,\n        });\n\n        peer.on(\"signal\", data => {\n            socket.emit(\"callUser\", { userToCall: username, signalData: data, from: props.username})\n        });\n\n        peer.on(\"stream\", stream => {\n            if (partnerVideo.current) {\n                partnerVideo.current.srcObject = stream;\n            }\n        });\n\n        socket.on(\"callAccepted\", signal => {\n            setCallAccepted(true);\n            peer.signal(signal);\n        });\n    }\n\n    function acceptCall() {\n    }\n\n    return(\n        <div>\n            hi\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}