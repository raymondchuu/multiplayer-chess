{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/RaymondChu/react-chess/src/components/App.js\";\nimport React from 'react';\nimport Board from './Board';\nimport initializeChessBoard from '../helpers/InitializeChessBoard';\nimport '../App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      squares: initializeChessBoard(),\n      playerTurn: 1,\n      selectedIndex: -1\n    };\n  }\n\n  handleClick(index) {\n    const squares = this.state.squares.slice(); //piece has not been selected\n\n    if (this.state.selectedIndex < 0) {\n      if (squares[index] && squares[index].player === this.state.playerTurn) {\n        console.log(index);\n        squares[index].style = { ...squares[index].style,\n          backgroundColor: \"#ffcb5f\"\n        };\n        this.setState({\n          squares: squares,\n          selectedIndex: index\n        });\n      } else {\n        console.log(\"That is not your piece\");\n      }\n    } //piece has been selected\n    else {\n        squares[this.state.selectedIndex].style = { ...squares[this.state.selectedIndex].style,\n          backgroundColor: null\n        };\n\n        if (squares[index].player === this.state.playerTurn) {\n          console.log(\"That's your own piece wtf\");\n        } else {\n          const validMove = squares[this.state.selectedIndex].isMoveValid(this.state.selectedIndex, index);\n          const pathIndicies = squares[this.state.selectedIndex].getPathIndicies(this.state.selectedIndex, index);\n\n          if (validMove) {\n            var valid = true;\n\n            for (var i = 0; i < pathIndicies.length && valid; ++i) {\n              if (squares[i] !== null) {\n                valid = false;\n              }\n            }\n\n            if (valid) {\n              squares[i] = squares[this.state.selectedIndex];\n              squares[this.state.selectedIndex] = null;\n              var nextTurn = this.state.playerTurn === 1 ? 2 : 1;\n              this.setState({\n                squares: squares,\n                playerTurn: nextTurn,\n                selectedIndex: -1\n              });\n            }\n          }\n        }\n      }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        squares: this.state.squares,\n        onClick: index => this.handleClick(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/RaymondChu/react-chess/src/components/App.js"],"names":["React","Board","initializeChessBoard","App","Component","constructor","state","squares","playerTurn","selectedIndex","handleClick","index","slice","player","console","log","style","backgroundColor","setState","validMove","isMoveValid","pathIndicies","getPathIndicies","valid","i","length","nextTurn","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './Board';\nimport initializeChessBoard from '../helpers/InitializeChessBoard';\n\nimport '../App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      squares: initializeChessBoard(),\n      playerTurn: 1,\n      selectedIndex: -1,\n    }\n  }\n\n  handleClick(index) {\n    const squares = this.state.squares.slice();\n    \n    //piece has not been selected\n    if (this.state.selectedIndex < 0) {\n      if (squares[index] && squares[index].player === this.state.playerTurn) {\n        console.log(index);\n        squares[index].style = {...squares[index].style, backgroundColor: \"#ffcb5f\" };\n        this.setState({\n          squares: squares,\n          selectedIndex: index\n        });\n      }\n      else {\n        console.log(\"That is not your piece\");\n      }\n    }\n\n    //piece has been selected\n    else {\n      squares[this.state.selectedIndex].style = {...squares[this.state.selectedIndex].style, backgroundColor: null}\n      if (squares[index].player === this.state.playerTurn) {\n        console.log(\"That's your own piece wtf\");\n      }\n      else {\n        const validMove = squares[this.state.selectedIndex].isMoveValid(this.state.selectedIndex, index);\n        const pathIndicies = squares[this.state.selectedIndex].getPathIndicies(this.state.selectedIndex, index);\n        if (validMove) {\n          var valid = true;\n          for (var i = 0; i < pathIndicies.length && valid; ++i) {\n            if (squares[i] !== null) {\n              valid = false;\n            }\n          }\n\n          if (valid) {\n            squares[i] = squares[this.state.selectedIndex];\n            squares[this.state.selectedIndex] = null;\n            var nextTurn = this.state.playerTurn === 1 ? 2 : 1;\n            this.setState({\n              squares: squares,\n              playerTurn: nextTurn,\n              selectedIndex: -1,\n            })\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Board \n          squares={this.state.squares}\n          onClick={(index) => this.handleClick(index)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}