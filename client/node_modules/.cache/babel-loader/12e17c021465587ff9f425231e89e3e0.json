{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondChu/react-chess/client/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { socket } from '../socket/socket';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport Message from './Message';\nimport '../styles/Chat.css';\nexport default function Chat(props) {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    socket.on('message', receivedMessage => {\n      setMessages([...messages, receivedMessage]);\n    });\n  }, [messages]); //sending messages\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, props.gameId, props.username, () => setMessage(\"\"));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n        className: \"messages-container\",\n        children: messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            message: message,\n            name: props.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 65\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 52\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          className: \"input\",\n          label: \"Standard\",\n          value: message,\n          onChange: event => setMessage(event.target.value),\n          onKeyPress: event => event.key === 'Enter' ? sendMessage(event) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          className: \"send-btn\",\n          color: \"primary\",\n          onClick: event => sendMessage(event),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"cirg1XNVuY5I7aqZjd23CdWZMY0=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/RaymondChu/react-chess/client/src/components/Chat.js"],"names":["React","useState","useEffect","Button","TextField","socket","ScrollToBottom","Message","Chat","props","messages","setMessages","message","setMessage","on","receivedMessage","sendMessage","event","preventDefault","emit","gameId","username","map","i","target","value","key"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,oBAAP;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,MAAM,CAACS,EAAP,CAAU,SAAV,EAAsBC,eAAD,IAAqB;AACtCJ,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcK,eAAd,CAAD,CAAX;AACH,KAFD;AAIH,GALQ,EAKN,CAACL,QAAD,CALM,CAAT,CALgC,CAYhC;;AAEA,QAAMM,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAIN,OAAJ,EAAa;AACTP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA2BP,OAA3B,EAAoCH,KAAK,CAACW,MAA1C,EAAkDX,KAAK,CAACY,QAAxD,EAAkE,MAAMR,UAAU,CAAC,EAAD,CAAlF;AACH;AAEJ,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAA,6BACI,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAC,oBAA1B;AAAA,kBACKH,QAAQ,CAACY,GAAT,CAAa,CAACV,OAAD,EAAUW,CAAV,kBAAiB;AAAA,iCAAa,QAAC,OAAD;AAAS,YAAA,OAAO,EAAEX,OAAlB;AAA2B,YAAA,IAAI,EAAEH,KAAK,CAACY;AAAvC;AAAA;AAAA;AAAA;AAAA;AAAb,WAAUE,CAAV;AAAA;AAAA;AAAA;AAAA,gBAA9B;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,6BAEA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,EAAE,EAAC,gBADP;AAEI,UAAA,SAAS,EAAC,OAFd;AAGI,UAAA,KAAK,EAAC,UAHV;AAII,UAAA,KAAK,EAAEX,OAJX;AAKI,UAAA,QAAQ,EAAGK,KAAD,IAAWJ,UAAU,CAACI,KAAK,CAACO,MAAN,CAAaC,KAAd,CALnC;AAMI,UAAA,UAAU,EAAER,KAAK,IAAIA,KAAK,CAACS,GAAN,KAAc,OAAd,GAAwBV,WAAW,CAACC,KAAD,CAAnC,GAA6C;AANtE;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,SAAS,EAAC,UAAtC;AAAiD,UAAA,KAAK,EAAC,SAAvD;AAAiE,UAAA,OAAO,EAAGA,KAAD,IAAWD,WAAW,CAACC,KAAD,CAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GAhDuBT,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { socket } from '../socket/socket';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport Message from './Message';\n\nimport '../styles/Chat.css';\n\nexport default function Chat(props) {\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    \n\n    useEffect(() => {\n        socket.on('message', (receivedMessage) => {\n            setMessages([...messages, receivedMessage]);\n        });\n\n    }, [messages]);\n\n    //sending messages\n\n    const sendMessage = (event) => {\n        event.preventDefault();\n\n        if (message) {\n            socket.emit(\"sendMessage\", message, props.gameId, props.username, () => setMessage(\"\")); \n        }\n\n    }\n\n    return (\n        <div className=\"chat-container\">\n            <div>\n                <ScrollToBottom className=\"messages-container\">\n                    {messages.map((message, i) => (<div key={i}><Message message={message} name={props.username}/></div>))}\n                </ScrollToBottom>\n            </div>\n            <form>\n\n            <div className=\"input-container\">\n                <TextField \n                    id=\"standard-basic\" \n                    className=\"input\"\n                    label=\"Standard\" \n                    value={message} \n                    onChange={(event) => setMessage(event.target.value)} \n                    onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}\n                />\n                <Button variant=\"contained\" className=\"send-btn\" color=\"primary\" onClick={(event) => sendMessage(event)}>\n                    Send\n                </Button>\n            </div>\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}