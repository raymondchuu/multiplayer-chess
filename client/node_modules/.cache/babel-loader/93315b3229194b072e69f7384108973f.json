{"ast":null,"code":"import Piece from './Piece';\nexport default class Rook extends Piece {\n  constructor(player) {\n    super(player, player === 1 ? 'https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg' : 'https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg');\n\n    this.isMoveValid = (initialPos, endPos) => {\n      const mod = initialPos % 8;\n      const diff = 8 - mod;\n      return Math.abs(initialPos - endPos) % 8 === 0 || endPos >= initialPos - mod && endPos < initialPos + diff;\n    };\n\n    this.getPathIndicies = (initialPos, endPos) => {\n      const diff = Math.abs(endPos - initialPos);\n      var increment;\n      var indicies = [];\n\n      if (diff % 8 === 0) {\n        increment = 8;\n      } else {\n        increment = 1;\n      }\n\n      if (endPos > initialPos) {\n        for (var i = initialPos + increment; i < endPos; i += increment) {\n          indicies.push(i);\n        }\n      } else {\n        for (i = initialPos - increment; i > endPos; i -= increment) {\n          indicies.push(i);\n        }\n      }\n\n      return indicies;\n    };\n\n    this.hasMoved = false;\n    this.name = \"Rook\";\n  }\n\n  handleMoved() {\n    this.hasMoved = true;\n  }\n\n  moved() {\n    return this.hasMoved;\n  }\n\n  getName() {\n    return this.name;\n  }\n\n}","map":{"version":3,"sources":["/Users/RaymondChu/react-chess/client/src/pieces/Rook.js"],"names":["Piece","Rook","constructor","player","isMoveValid","initialPos","endPos","mod","diff","Math","abs","getPathIndicies","increment","indicies","i","push","hasMoved","name","handleMoved","moved","getName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBD,KAAnB,CAAyB;AACpCE,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,UAAMA,MAAN,EAAcA,MAAM,KAAK,CAAX,GAAe,qEAAf,GAAuF,qEAArG;;AADgB,SAkBpBC,WAlBoB,GAkBN,CAACC,UAAD,EAAaC,MAAb,KAAwB;AAClC,YAAMC,GAAG,GAAGF,UAAU,GAAG,CAAzB;AACA,YAAMG,IAAI,GAAG,IAAID,GAAjB;AAEA,aACIE,IAAI,CAACC,GAAL,CAASL,UAAU,GAAGC,MAAtB,IAAgC,CAAhC,KAAsC,CAAtC,IACCA,MAAM,IAAKD,UAAU,GAAGE,GAAxB,IAAgCD,MAAM,GAAID,UAAU,GAAGG,IAF5D;AAIH,KA1BmB;;AAAA,SA4BpBG,eA5BoB,GA4BF,CAACN,UAAD,EAAaC,MAAb,KAAwB;AACtC,YAAME,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASJ,MAAM,GAAGD,UAAlB,CAAb;AACA,UAAIO,SAAJ;AACA,UAAIC,QAAQ,GAAG,EAAf;;AAEA,UAAIL,IAAI,GAAG,CAAP,KAAa,CAAjB,EAAoB;AAChBI,QAAAA,SAAS,GAAG,CAAZ;AACH,OAFD,MAIK;AACDA,QAAAA,SAAS,GAAG,CAAZ;AACH;;AAED,UAAIN,MAAM,GAAGD,UAAb,EAAyB;AACrB,aAAK,IAAIS,CAAC,GAAGT,UAAU,GAAGO,SAA1B,EAAqCE,CAAC,GAAGR,MAAzC,EAAiDQ,CAAC,IAAIF,SAAtD,EAAiE;AAC7DC,UAAAA,QAAQ,CAACE,IAAT,CAAcD,CAAd;AACH;AACJ,OAJD,MAMK;AACD,aAAKA,CAAC,GAAGT,UAAU,GAAGO,SAAtB,EAAiCE,CAAC,GAAGR,MAArC,EAA6CQ,CAAC,IAAIF,SAAlD,EAA6D;AACzDC,UAAAA,QAAQ,CAACE,IAAT,CAAcD,CAAd;AACH;AACJ;;AAED,aAAOD,QAAP;AACH,KAtDmB;;AAEhB,SAAKG,QAAL,GAAgB,KAAhB;AACA,SAAKC,IAAL,GAAY,MAAZ;AACH;;AAEDC,EAAAA,WAAW,GAAG;AACV,SAAKF,QAAL,GAAgB,IAAhB;AACH;;AAEDG,EAAAA,KAAK,GAAG;AACJ,WAAO,KAAKH,QAAZ;AACH;;AAEDI,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKH,IAAZ;AACH;;AAjBmC","sourcesContent":["import Piece from './Piece';\n\nexport default class Rook extends Piece {\n    constructor(player) {\n        super(player, player === 1 ? 'https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg' : 'https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg');\n        this.hasMoved = false;\n        this.name = \"Rook\";\n    }\n\n    handleMoved() {\n        this.hasMoved = true;\n    }\n\n    moved() {\n        return this.hasMoved;\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    isMoveValid = (initialPos, endPos) => {\n        const mod = initialPos % 8;\n        const diff = 8 - mod;\n\n        return (\n            Math.abs(initialPos - endPos) % 8 === 0 ||\n            (endPos >= (initialPos - mod) && endPos < (initialPos + diff))\n        )\n    }\n\n    getPathIndicies = (initialPos, endPos) => {\n        const diff = Math.abs(endPos - initialPos);\n        var increment;\n        var indicies = [];\n\n        if (diff % 8 === 0) {\n            increment = 8;\n        }\n\n        else {\n            increment = 1;\n        }\n\n        if (endPos > initialPos) {\n            for (var i = initialPos + increment; i < endPos; i += increment) {\n                indicies.push(i);\n            }\n        }\n\n        else {\n            for (i = initialPos - increment; i > endPos; i -= increment) {\n                indicies.push(i);\n            }\n        }\n\n        return indicies;\n    }\n}"]},"metadata":{},"sourceType":"module"}